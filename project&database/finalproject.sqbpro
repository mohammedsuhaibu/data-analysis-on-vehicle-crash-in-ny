<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/sanan/Downloads/MIS final project/finalproject.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="5615"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,12:mainCONSOLIDATED"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CONSOLIDATED" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="96"/><column index="3" value="96"/><column index="4" value="97"/><column index="5" value="90"/><column index="6" value="89"/><column index="7" value="110"/><column index="8" value="82"/><column index="9" value="219"/><column index="10" value="147"/><column index="11" value="135"/><column index="12" value="103"/><column index="13" value="170"/><column index="14" value="209"/><column index="15" value="300"/><column index="16" value="109"/><column index="17" value="85"/><column index="18" value="82"/><column index="20" value="63"/><column index="21" value="47"/><column index="22" value="61"/><column index="23" value="68"/><column index="24" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CRASH_0NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="82"/><column index="4" value="61"/><column index="5" value="68"/><column index="6" value="76"/><column index="7" value="150"/><column index="8" value="243"/><column index="9" value="197"/><column index="10" value="231"/><column index="11" value="183"/><column index="12" value="174"/><column index="13" value="212"/><column index="14" value="203"/><column index="15" value="178"/><column index="16" value="169"/><column index="17" value="191"/><column index="18" value="182"/><column index="19" value="300"/><column index="20" value="207"/><column index="21" value="207"/><column index="22" value="207"/><column index="23" value="207"/><column index="24" value="96"/><column index="25" value="207"/><column index="26" value="207"/><column index="27" value="207"/><column index="28" value="207"/><column index="29" value="207"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CRASH_1NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="96"/><column index="2" value="140"/><column index="3" value="82"/><column index="5" value="63"/><column index="6" value="47"/><column index="7" value="61"/><column index="8" value="74"/><column index="9" value="79"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CRASH_2NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="96"/><column index="2" value="85"/><column index="3" value="82"/><column index="5" value="63"/><column index="6" value="47"/><column index="7" value="61"/><column index="8" value="74"/><column index="9" value="79"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PERSON_0NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="82"/><column index="4" value="61"/><column index="5" value="68"/><column index="6" value="76"/><column index="7" value="150"/><column index="8" value="243"/><column index="9" value="197"/><column index="10" value="231"/><column index="11" value="183"/><column index="12" value="174"/><column index="13" value="212"/><column index="14" value="203"/><column index="15" value="178"/><column index="16" value="169"/><column index="17" value="191"/><column index="18" value="182"/><column index="19" value="300"/><column index="20" value="207"/><column index="21" value="207"/><column index="22" value="207"/><column index="23" value="207"/><column index="24" value="96"/><column index="25" value="207"/><column index="26" value="207"/><column index="27" value="207"/><column index="28" value="207"/><column index="29" value="207"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PERSON_1NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="96"/><column index="3" value="96"/><column index="4" value="97"/><column index="5" value="90"/><column index="6" value="89"/><column index="7" value="110"/><column index="8" value="82"/><column index="9" value="133"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PERSON_2NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="79"/><column index="2" value="96"/><column index="3" value="96"/><column index="4" value="97"/><column index="5" value="90"/><column index="6" value="89"/><column index="7" value="110"/><column index="8" value="82"/><column index="9" value="227"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="VEHICLE_0NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="10" value="181"/><column index="14" value="280"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="VEHICLE_1NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="6" mode="1"/></sort><column_widths><column index="1" value="82"/><column index="2" value="96"/><column index="3" value="147"/><column index="4" value="140"/><column index="5" value="168"/><column index="6" value="170"/><column index="7" value="209"/><column index="8" value="224"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="VEHICLE_2NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="VEHICLE_TYPE_TO_CATEGORY" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="242"/><column index="2" value="149"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="nycolpeople.sql">-- Create table PERSON_1NF
DROP TABLE IF EXISTS PERSON_1NF;
CREATE TABLE PERSON_1NF (
  PERSON_ID INTEGER PRIMARY KEY AUTOINCREMENT,
  COLLISION_ID INTEGER,
  PERSON_TYPE TEXT,
  PERSON_ROLE TEXT,
  PERSON_AGE INTEGER,
  PERSON_SEX TEXT,
  PERSON_INJURY TEXT,
  VEHICLE_ID INTEGER,
  SAFETY_EQUIPMENT TEXT
);

-- Insert data into PERSON_1NF table based on specified filters
INSERT INTO PERSON_1NF (PERSON_ID, COLLISION_ID, PERSON_TYPE, PERSON_ROLE, PERSON_AGE, PERSON_SEX, PERSON_INJURY, VEHICLE_ID, SAFETY_EQUIPMENT)
SELECT
  UNIQUE_ID AS PERSON_ID,
  COLLISION_ID,
  PERSON_TYPE,
  CASE 
    WHEN PERSON_TYPE = 'In-Line Skater' THEN 'Driver'
    ELSE PED_ROLE 
  END AS PERSON_ROLE,
  CASE 
    WHEN PERSON_AGE BETWEEN 0 AND 120 THEN PERSON_AGE
    ELSE NULL 
  END AS PERSON_AGE,
  CASE 
    WHEN PERSON_SEX IS NULL THEN 'U'
    ELSE PERSON_SEX 
  END AS PERSON_SEX,
  PERSON_INJURY,
  VEHICLE_ID,
  SAFETY_EQUIPMENT
FROM 
  PERSON_0NF
WHERE 
  PERSON_ROLE IS NOT NULL 
  AND PERSON_ROLE NOT IN ('Owner','Registrant','Witness','Notified Person','Other');
</sql><sql name="nycolvehicle.sql">-- Drop VEHICLE_1NF table if it exists
DROP TABLE IF EXISTS VEHICLE_1NF;

-- Create VEHICLE_1NF table with required columns
CREATE TABLE VEHICLE_1NF (
  VEHICLE_ID INTEGER PRIMARY KEY AUTOINCREMENT,
  COLLISION_ID INTEGER,
  STATE_REGISTRATION TEXT,
  VEHICLE_CATEGORY TEXT,
  VEHICLE_YEAR INTEGER,
  DRIVER_LICENSE_STATUS TEXT,
  DRIVER_LICENSE_JURISDICTION TEXT,
  PRIMARY_CONTRIBUTING_FACTOR TEXT
);

  -- Insert data into VEHICLE_1NF table based on specified filters
INSERT OR IGNORE INTO VEHICLE_1NF (VEHICLE_ID, COLLISION_ID, STATE_REGISTRATION, VEHICLE_CATEGORY, VEHICLE_YEAR, DRIVER_LICENSE_STATUS, DRIVER_LICENSE_JURISDICTION, PRIMARY_CONTRIBUTING_FACTOR)
SELECT DISTINCT
  A.UNIQUE_ID AS VEHICLE_ID,
  A.COLLISION_ID,
  A.STATE_REGISTRATION,
  B.VEHICLE_CATEGORY,
  A.VEHICLE_YEAR,
  A.DRIVER_LICENSE_STATUS,
  A.DRIVER_LICENSE_JURISDICTION,
  CASE 
    WHEN CONTRIBUTING_FACTOR_1 IS NULL THEN 'Unspecified'
    ELSE CONTRIBUTING_FACTOR_1 
  END AS PRIMARY_CONTRIBUTING_FACTOR
FROM 
  VEHICLE_0NF A
  INNER JOIN VEHICLE_TYPE_TO_CATEGORY B ON A.VEHICLE_TYPE = B.VEHICLE_TYPE
WHERE 
  VEHICLE_CATEGORY IS NOT NULL;
</sql><sql name="nycolcrash.sql">-- making the new table
DROP TABLE IF EXISTS CRASH_1NF; 
SELECT CRASHDATE, CRASHTIME, substr(CRASHDATE, 7) || '-' || substr(CRASHDATE, 1, 2) || '-' || substr(CRASHDATE, 4, 2) || ' ' || 
                    case length(CRASHTIME)
                       when 1 then '0' || CRASHTIME || ':00'
                       when 2 then CRASHTIME || ':00'
                       when 3 then substr(CRASHTIME, 1, 1) || ':' || substr(CRASHTIME, 2) || ':00'
					   when 4 then '0' || substr(CRASHTIME, 1, 1) || substr(CRASHTIME, 2) || ':00'
                       else substr(CRASHTIME, 1, 2)  || substr(CRASHTIME, 3) || ':00'
                    end  date1 from CRASH_0NF WHERE CRASHDATE IS NOT NULL AND CRASHTIME IS NOT NULL limit 100;
 

CREATE TABLE CRASH_1NF (
  COLLISION_ID INTEGER PRIMARY KEY AUTOINCREMENT,
  CRASHDATE DATE,
  CRASHTIME TIME,
  CRASHDATETIME DATETIME,
  BOROUGH TEXT,
  COUNTY TEXT,
  STATE TEXT,
  ZIPCODE TEXT,
  LATITUDE REAL,
  LONGITUDE REAL
);

INSERT INTO CRASH_1NF (
  COLLISION_ID, 
  CRASHDATE,
  CRASHTIME,
  CRASHDATETIME,
  BOROUGH, 
  COUNTY, 
  STATE, 
  ZIPCODE, 
  LATITUDE, 
  LONGITUDE
)

SELECT 
  COLLISION_ID,
  CRASHDATE,
  CRASHTIME,
   (substr(CRASHDATE, 7) || '-' || substr(CRASHDATE, 1, 2) || '-' || substr(CRASHDATE, 4, 2) || ' ' || 
                    case length(CRASHTIME)
                       when 1 then '0' || CRASHTIME || ':00'
                       when 2 then CRASHTIME || ':00'
                       when 3 then substr(CRASHTIME, 1, 1) || ':' || substr(CRASHTIME, 2) || ':00'
					   when 4 then '0' || substr(CRASHTIME, 1, 1) || substr(CRASHTIME, 2) || ':00'
                       else substr(CRASHTIME, 1, 2)  || substr(CRASHTIME, 3) || ':00'
                    end),
  BOROUGH,
  case BOROUGH
    when 'BRONX' then 'Bronx'
    when 'BROOKLYN' then 'Kings'
    when 'MANHATTAN' then 'New York'
    when 'QUEENS' then 'Queens'
    when 'STATEN ISLAND' then 'Richmond'
    else NULL
  end,
  'NY',
  ZIPCODE,
  LATITUDE,
  LONGITUDE
FROM 
 CRASH_0NF
WHERE 
    (substr(CRASHDATE, 7) || '-' || substr(CRASHDATE, 1, 2) || '-' || substr(CRASHDATE, 4, 2) || ' ' || 
                    case length(CRASHTIME)
                       when 1 then '0' || CRASHTIME || ':00'
                       when 2 then CRASHTIME || ':00'
                       when 3 then substr(CRASHTIME, 1, 1) || ':' || substr(CRASHTIME, 2) || ':00'
					   when 4 then '0' || substr(CRASHTIME, 1, 1) || substr(CRASHTIME, 2) || ':00'
                       else substr(CRASHTIME, 1, 2)  || substr(CRASHTIME, 3) || ':00'
                    end) &gt;= '2019-01-01 00:00:00'
  AND BOROUGH IS NOT NULL;

  </sql><sql name="nycolnorm.sql">DROP TABLE IF EXISTS PERSON_2NF;
DROP TABLE IF EXISTS VEHICLE_2NF;
DROP TABLE IF EXISTS CRASH_2NF;


CREATE TABLE CRASH_2NF (
  COLLISION_ID INTEGER PRIMARY KEY,
  CRASHDATE DATE,
  CRASHTIME TIME,
  CRASHDATETIME DATETIME,
  BOROUGH TEXT,
  COUNTY TEXT,
  STATE TEXT,
  ZIPCODE TEXT,
  LATITUDE REAL,
  LONGITUDE REAL
);


CREATE TABLE VEHICLE_2NF (
  VEHICLE_ID INTEGER PRIMARY KEY,
  COLLISION_ID INTEGER,
  STATE_REGISTRATION TEXT,
  VEHICLE_CATEGORY TEXT,
  VEHICLE_YEAR INTEGER,
  DRIVER_LICENSE_STATUS TEXT,
  DRIVER_LICENSE_JURISDICTION TEXT,
  PRIMARY_CONTRIBUTING_FACTOR TEXT,
	FOREIGN KEY (COLLISION_ID) REFERENCES CRASH_2NF(COLLISION_ID)
);


CREATE TABLE PERSON_2NF (
  PERSON_ID INTEGER PRIMARY KEY,
  COLLISION_ID INTEGER,
  PERSON_TYPE TEXT,
  PERSON_ROLE TEXT,
  PERSON_AGE INTEGER,
  PERSON_SEX TEXT,
  PERSON_INJURY TEXT,
  VEHICLE_ID INTEGER,
  SAFETY_EQUIPMENT TEXT,
	FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE_2NF(VEHICLE_ID),
	FOREIGN KEY (COLLISION_ID) REFERENCES CRASH_2NF(COLLISION_ID)
);


INSERT INTO CRASH_2NF
SELECT *
FROM CRASH_1NF;



INSERT INTO VEHICLE_2NF
SELECT *
FROM VEHICLE_1NF
WHERE COLLISION_ID IN (SELECT COLLISION_ID FROM CRASH_2NF);


INSERT INTO PERSON_2NF
SELECT *
FROM PERSON_1NF
WHERE COLLISION_ID IN (SELECT COLLISION_ID FROM CRASH_2NF)
AND VEHICLE_ID IN (SELECT VEHICLE_ID FROM VEHICLE_2NF);


</sql><sql name="nycolmerge.sql">DROP TABLE IF EXISTS CONSOLIDATED;

CREATE TABLE CONSOLIDATED AS
SELECT 
P.*,
V.STATE_REGISTRATION,	
V.VEHICLE_CATEGORY,	
V.VEHICLE_YEAR,	
V.DRIVER_LICENSE_STATUS,	
V.DRIVER_LICENSE_JURISDICTION,	
V.PRIMARY_CONTRIBUTING_FACTOR,
C.COLLISION_ID,	
C.CRASHDATE,	
C.CRASHTIME,	
C.BOROUGH,	
C.COUNTY,	
C.STATE,	
C.ZIPCODE,	
C.LATITUDE,	
C.LONGITUDE
FROM PERSON_2NF P 
LEFT JOIN VEHICLE_2NF V  ON P.VEHICLE_ID=V.VEHICLE_ID
LEFT JOIN CRASH_2NF C ON C.COLLISION_ID=P.COLLISION_ID AND C.COLLISION_ID=V.COLLISION_ID

    </sql><current_tab id="4"/></tab_sql></sqlb_project>
